# File: .github/workflows/workflow.yml

name: Run Azure Login with OIDC
on: [push]

permissions:
  id-token: write
  contents: read
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      # - name: Create Resource Group
      #   run: |
      #     az group create --name ah-catalog-test --location eastus
            
      # - name: Azure Resource Manager Deployment
      #   id: deployment
      #   uses: azure/bicep-deploy@v2
      #   with:
      #     type: deployment
      #     operation: create
      #     scope: resourceGroup
      #     name: DeployResources
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     resource-group-name: ah-catalog-test
      #     template-file: AutomationCatalogForPowerPlatform/ACPP.Infrastructure/template.bicep
      #     parameters: |
      #       clientId: ${{ secrets.AZURE_CLIENT_ID }}
      #       tenantId: ${{ secrets.AZURE_TENANT_ID }}
      #       appService: appService-sg-1
      #       appServicePlan: appServicePlan-sg-1
      #       storageAccount: storageaccsg1
      #       applicationInsights: AiSg1
      #       catalogPublisherId: fb31ecb7-e51e-f011-998a-000d3a8040d2
      #       catalogEnvUrl: https://org028f6349.api.crm5.dynamics.com/

            
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore dependencies
        run: dotnet restore AutomationCatalogForPowerPlatform/ACPP.API/ACPP.API.csproj
      
      - name: Change Directory
        run: cd AutomationCatalogForPowerPlatform/ACPP.API
      
      - name: Build API
        run: dotnet build AutomationCatalogForPowerPlatform/ACPP.API/ACPP.API.csproj --configuration Release --no-restore

      - name: Publish API
        run: dotnet publish AutomationCatalogForPowerPlatform/ACPP.API/ACPP.API.csproj --configuration Release --no-restore --output ${{ github.workspace }}/dropAPI

      - name: Upload API Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: dropAPI
          path: ${{ github.workspace }}/dropAPI

  build-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: '18.15.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Packages
        run: npm install
        working-directory: AutomationCatalogForPowerPlatform/ACPP.Client

      - name: Build UI
        run: |
          set REACT_APP_BUILD_ID=${{ github.run_number }}
          set REACT_APP_TEAMS_APP_ID=${{ github.TEAMSAPPID }}
          set REACT_APP_CLIENT_ID=${{ secrets.CLIENT_ID }}
          set REACT_APP_DEFAULT_TOKEN_SCOPE=api://${{ github.APPSERVICE }}.azurewebsites.net/${{ secrets.CLIENT_ID }}
          set REACT_APP_ADMIN_ENV=${{ github.ADMINENVIRONMENT }}
          set REACT_APP_FEEDBACK_FORM_URL=${{ github.FEEDBACKFORMURL }}
          set REACT_APP_FAQ_URL=${{ github.FAQURL }}
          set REACT_APP_AI_CONNECTION_STRING=${{ github.APPINSIGHTSCONNECTIONSTRING }}
          npm run build:prod
        working-directory: AutomationCatalogForPowerPlatform/ACPP.Client
        env:
          CI: ""

      - name: Copy Locales
        run: xcopy "src\\i18n\\locales" "build\\static\\locales\\" /e /s /y
        working-directory: AutomationCatalogForPowerPlatform/ACPP.Client

      - name: Copy Files
        run: xcopy "AutomationCatalogForPowerPlatform\\ACPP.Client\\build" "${{ github.workspace }}\\dropUI\\ClientApp" /e /s /y

      - name: Upload UI Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: dropUI
          path: ${{ github.workspace }}/dropUI

  deploy-code:
    needs: [build-api, build-ui]
    runs-on: ubuntu-latest
    steps:
      - name: Download API Artifact
        uses: actions/download-artifact@v3
        with:
          name: dropAPI
          path: dropAPI

      - name: Download UI Artifact
        uses: actions/download-artifact@v3
        with:
          name: dropUI
          path: dropUI

      - name: Merge API and UI
        run: |
          xcopy "dropAPI\\ACPP.API" "${{ github.workspace }}\\dist" /e /s
          xcopy "dropUI\\ClientApp" "${{ github.workspace }}\\dist\\ClientApp" /e /s

      # - name: Deploy to Azure Web App
      #   uses: azure/webapps-deploy@v3
      #   with:
      #     app-name: ${{ secrets.APP_SERVICE }}
      #     publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
      #     package: ${{ github.workspace }}/dist


          
